#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass beamer
\begin_preamble
\usepackage{listings}
%\lstloadlanguages{Assembler}
% configuration code asm
%\lstset{language=[x86masm]Assembler}
%\lstset{numbers=left, numberstyle=\tiny, stepnumber=1, numbersep=8pt}
%\lstset{tabsize=2}
%\lstset{basicstyle=\footnotesize,keywordstyle=\bfseries,frame=single,framerule=.1pt}
%\lstset{backgroundcolor=\color[gray]{.98}}
\end_preamble
\use_default_options true
\maintain_unincluded_children false
\language french
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language french
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
MIC: Instructions - Résumé
\end_layout

\begin_layout Date
\begin_inset space ~
\end_inset


\end_layout

\begin_layout BeginFrame
Codes des registres
\end_layout

\begin_layout Itemize
Les registres généraux du processeur sont codés sur 3 bits:
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AL, AX, EAX 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
000 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
AH, SP, ESP 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
100
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CL, CX, ECX 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
001
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
CH, BP, EBP 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
101
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
 DL, DX, EDX 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
010
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
DH, SI, ESI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
110
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
BL, BX, EBX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
011
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
 BH, DI, EDI
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
111
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
CLC 
\end_layout

\begin_layout Itemize
Mise à zéro du Carry Flag
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Structure : 
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{code op.}}_{\text{0xF8}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Le INC r32
\end_layout

\begin_layout Itemize
Incrémentation d'un registre
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Structure : 
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{code op.}}_{\text{0x40 + registre}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Ex: 
\begin_inset Formula $\underbrace{INC\,\, ECX}_{\text{0x41}}$
\end_inset

 
\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
MOV r32, imm32 
\end_layout

\begin_layout Itemize
Copie d'un immédiat dans un registre
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Structure : 
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{code op.}}_{\text{0xB8 + registre}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{immédiat}}_{\text{4\,\ bytes}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Ex: 
\begin_inset Formula $\underbrace{MOV\,\, ESI}_{\text{0xBE}},\,\,\underbrace{8}_{0x08\,00\,00\,00}$
\end_inset

 
\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
ADD EAX, imm32 
\end_layout

\begin_layout Itemize
Addition d'un immédiat dans EAX
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Structure : 
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{code op.}}_{\text{0x05}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{immédiat}}_{\text{4\,\ bytes}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Ex: 
\begin_inset Formula $\underbrace{ADD\,\, EAX}_{\text{0x05}},\,\,\underbrace{10}_{0x0A\,00\,00\,00}$
\end_inset

 
\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
ADD r32/m32,r32
\end_layout

\begin_layout Itemize
\begin_inset Note Note
status open

\begin_layout Plain Layout
\begin_inset Note Note
status open

\begin_layout Plain Layout
L'instruction 
\end_layout

\end_inset

ADD r32/m32,r32 
\begin_inset Note Note
status open

\begin_layout Plain Layout
sert à copier 
\end_layout

\end_inset

 
\end_layout

\end_inset

Addition d'un registre vers un autre registre ou une mémoire
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Structure : 
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{code op.}}_{\text{0x01}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
byte ModR/M
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{.........}_{\text{voir plus bas}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Plusieurs variantes, différenciées par le byte ModR/M
\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
ADD r32/m32,r32: 1
\begin_inset Formula $^{\text{è}}$
\end_inset

 variante
\end_layout

\begin_layout Itemize
Addition de registre à registre
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Structure : 
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{code op.}}_{\text{0x01}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{byte ModR/M}}_{\mathbf{11}\text{\,\,\ reg1\,\,\ reg2}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Ex: 
\begin_inset Formula $\underbrace{ADD}_{\text{0x01}}\,\,\underbrace{EAX,\,\, EBX}_{11\,\,011\,\,000}$
\end_inset

 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(registres inversés)
\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
ADD r32/m32,r32: 2
\begin_inset Formula $^{\text{è}}$
\end_inset

 variante
\end_layout

\begin_layout Itemize
Addition de registre à mémoire (adresse dans le 1
\begin_inset Formula $^{\text{er}}$
\end_inset

 registre)
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Structure : 
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{code op.}}_{\text{0x01}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{byte ModR/M}}_{\mathbf{00}\text{\,\,\ reg1\,\,\ reg2}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Ex: 
\begin_inset Formula $\underbrace{ADD}_{\text{0x01}}\,\,\underbrace{[EAX],\,\, EBX}_{00\,\,011\,\,000}$
\end_inset

 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(registres inversés)
\begin_inset Note Note
status collapsed

\begin_layout Itemize
\begin_inset VSpace bigskip
\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Plain Layout
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\color red
Ni EBP ni ESP pour le 1
\begin_inset Formula $^{\text{er}}$
\end_inset

registre
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
ADD r32/m32,r32: 3
\begin_inset Formula $^{\text{è}}$
\end_inset

 variante
\end_layout

\begin_layout Itemize
Addition de registre à mémoire (adresse dans le 1
\begin_inset Formula $^{\text{er}}$
\end_inset

 registre + déplacement sur 1 byte)
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Structure : 
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{code op.}}_{\text{0x01}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{byte ModR/M}}_{\mathbf{01}\text{\,\,\ reg1\,\,\ reg2}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{déplacement}}_{\text{1 byte}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Ex: 
\begin_inset Formula $\underbrace{ADD}_{\text{0x01}}\,\,\underbrace{[EAX+10],\,\, EBX}_{01\,\,011\,\,000\,\,\,\,\,00001010}$
\end_inset

 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(registres inversés)
\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
ADD r32/m32,r32: 4
\begin_inset Formula $^{\text{è}}$
\end_inset

 variante
\end_layout

\begin_layout Itemize
Addition de registre à mémoire (adresse dans le 1
\begin_inset Formula $^{\text{er}}$
\end_inset

 registre + déplacement sur 4 bytes)
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Structure : 
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{code op.}}_{\text{0x01}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{byte ModR/M}}_{\mathbf{10}\text{\,\,\ reg1\,\,\ reg2}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{déplacement}}_{\text{4 byte}s}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Ex: 
\begin_inset Formula $\underbrace{ADD}_{\text{0x01}}\,\,\underbrace{[EAX+512],\,\, EBX}_{10\,\,011\,\,000\,\,\,\,\,0x00\,02\,00\,00}$
\end_inset

 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(registres inversés)
\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
ADD r32/m32,r32: 5
\begin_inset Formula $^{\text{è}}$
\end_inset

 variante
\end_layout

\begin_layout Itemize
Addition de registre à mémoire (adresse fixe sur 4 bytes)
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Structure : 
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{code op.}}_{\text{0x01}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{byte ModR/M}}_{\mathbf{00}\text{\,\,\ reg1\,\,\ EBP}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{adresse}}_{\text{4 byte}s}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Ex: 
\begin_inset Formula $\underbrace{ADD}_{\text{0x01}}\,\,\underbrace{[512],\,\, EBX}_{00\,\,011\,\,101\,\,\,\,\,0x00\,02\,00\,00}$
\end_inset

 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(inversion)
\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
ADD r32/m32,r32: 6
\begin_inset Formula $^{\text{è}}$
\end_inset

 variante 
\end_layout

\begin_layout Itemize
Addition de registre à mémoire (avec
\emph on
 
\emph default
index et base
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
déplacement
\end_layout

\end_inset


\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
 sur 1 ou 4 bytes
\end_layout

\end_inset

)
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Structure : 
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="3">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{code op.}}_{\text{0x01}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{byte ModR/M}}_{\mathbf{00}\text{\,\,\ reg1\,\,\ ESP}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{byte SIB}}_{\text{mult\,\,\ index\,\,\ base}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Ex: 
\begin_inset Formula $\underbrace{ADD}_{\text{0x01}}\,\,\underbrace{[EAX*2+ECX],\,\, EBX}_{00\,\,011\,\,100\,\,\,\,\,01\,\,000\,\,001}$
\end_inset

 
\begin_inset space ~
\end_inset


\begin_inset space ~
\end_inset

(inversion)
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Mult: 00=1x, 01=2x, 10=4x, 11=8x
\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
ADD r32/m32,r32: résumé
\end_layout

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="7" columns="3">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<column alignment="left" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Variante
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ModR/M
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Restriction
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ADD EAX, EBX 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
11
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Aucune
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ADD [EAX],EBX 
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
00
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pas [ESP] ni [EBP]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ADD [EAX+10],EBX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
01
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pas [ESP]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ADD [EAX+512],EBX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Pas [ESP]
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ADD [512],EBX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[EBP] 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
ADD [EAX*2+ECX], EBX
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
00
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
[ESP]
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Le MOVSB
\end_layout

\begin_layout Itemize
Copie en mémoire un byte de [ESI] vers [EDI] et incrémente ESI et EDI 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Structure : 
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="1">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{code op.}}_{\text{0xA4}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Le INT
\end_layout

\begin_layout Itemize
Provoque une interruption 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Structure : 
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{code op.}}_{\text{0xCD}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{n\ensuremath{^{\text{o}}}d'interruption}}_{\text{1\,\ byte}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Ex: 
\begin_inset Formula $\underbrace{INT}_{\text{0xCD}}\,\,\underbrace{0x80}_{80}$
\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Les préfixes
\end_layout

\begin_layout Itemize
Petit code se plaçant 
\series bold
avant
\series default
 le code opératoire
\end_layout

\begin_layout Itemize
Exemples:
\end_layout

\begin_deeper
\begin_layout Itemize
Préfixe de segmentation
\end_layout

\begin_layout Itemize
Préfixe de répétition
\end_layout

\begin_layout Itemize
Préfixe de taille
\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Préfixes de segmentation
\end_layout

\begin_layout Itemize
Servent à spécifier le segment dans des adresses de type
\begin_inset space ~
\end_inset

[ES:EAX]
\end_layout

\begin_layout Itemize
0x2E pour CS, 0x3E pour DS, 0x26 pour ES, 0x64 pour FS, 0x65 pour GS et
 0x36 pour SS
\end_layout

\begin_layout Itemize
Exemple: 
\end_layout

\begin_deeper
\begin_layout Itemize
ADD [EAX],EBX se codait 0x01
\begin_inset space ~
\end_inset

18
\end_layout

\begin_layout Itemize
ADD [ES:EAX],EBX se code 0x26
\begin_inset space ~
\end_inset

01
\begin_inset space ~
\end_inset

18
\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Préfixe de répétition REP
\end_layout

\begin_layout Itemize
Ex: REP MOVSB répète ECX fois MOVSB 
\begin_inset VSpace bigskip
\end_inset


\end_layout

\begin_layout Itemize
Structure : 
\begin_inset Tabular
<lyxtabular version="3" rows="1" columns="2">
<features tabularvalignment="middle">
<column alignment="center" valignment="top" width="0">
<column alignment="center" valignment="top" width="0">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{REP}}_{\text{0xF3}}$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $\underbrace{\text{code op.}}_{\text{0xA4}}$
\end_inset


\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Préfixe de taille 0x66
\end_layout

\begin_layout Itemize
Le processeur 80386 encode en général de la même façon les instructions
 16 bits et 32 bits :
\end_layout

\begin_deeper
\begin_layout Itemize
INC ECX et INC CX sont tous deux codés 0x41
\end_layout

\begin_layout Itemize
ADD EAX,EBX et ADD AX,BX sont tous deux codés 0x01
\begin_inset space ~
\end_inset

D8
\end_layout

\end_deeper
\begin_layout Itemize
Comment le processeur fait-il la différence ?
\end_layout

\begin_layout Itemize
Le 80386 travaille par défaut en 32 bits donc 0x41 signifie par défaut INC
 ECX
\end_layout

\begin_layout Itemize
Pour utiliser un registre de 16 bits, on utilise un 
\series bold
préfixe de taille 
\series default
(0x66)
\end_layout

\begin_deeper
\begin_layout Itemize
INC CX se code 0x
\color red
66
\color inherit

\begin_inset space ~
\end_inset

41
\end_layout

\begin_layout Itemize
ADD [AX],BX se code: 0x
\color red
66
\begin_inset space ~
\end_inset


\color inherit
01
\begin_inset space ~
\end_inset

D8 
\begin_inset Note Note
status open

\begin_layout Plain Layout
a verifier!!!
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\begin_layout BeginFrame
Préfixe de taille 0x66
\end_layout

\begin_layout Standard
\align center
\begin_inset Graphics
	filename printscreen-kdbg.JPG
	width 100text%

\end_inset


\end_layout

\begin_layout EndFrame

\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
ANCIENNE VERSION
\end_layout

\begin_layout BeginFrame
Préfixes de taille 0x66 et 0x67
\end_layout

\begin_layout Itemize
INC EAX et INC AX sont codés de la même façon
\end_layout

\begin_layout Itemize
Les directives [BITS 16] et [BITS 32] permettent de fixer le mode du programme
 (16 bits ou 32 bits)
\end_layout

\begin_layout Itemize
Comment utiliser EAX quand on est en mode 16 bits ?
\end_layout

\begin_deeper
\begin_layout Itemize
Employer des 
\series bold
préfixe de taille
\series default
 pour basculer de 16 à 32 bits
\end_layout

\begin_layout Itemize
0x66 pour basculer un registre
\end_layout

\begin_layout Itemize
0x67 pour basculer une zone-mémoire
\end_layout

\end_deeper
\begin_layout Itemize
Exemple: 
\end_layout

\begin_deeper
\begin_layout Itemize
ADD [EAX],EBX se codait 0x01
\begin_inset space ~
\end_inset

18 en mode 32 bits
\end_layout

\begin_layout Itemize
En mode 16 bits on ajoute les préfixes: 0x66
\begin_inset space ~
\end_inset

67
\begin_inset space ~
\end_inset

01
\begin_inset space ~
\end_inset

18
\end_layout

\end_deeper
\begin_layout EndFrame

\end_layout

\end_inset


\end_layout

\end_body
\end_document
